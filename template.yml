AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Start from scratch starter project

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 60

Parameters:
  AppId:
    Type: String
  MongoDbUri:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /MongoDbUri
    Description: MongoDB connection URI
  DbName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /DbName
    Description: MongoDB Database name
  JwtSecret:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /JwtSecret
    Description: JWT secret for token signing

Resources:
  PassengerProxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/router/index.handler
      Description: A Lambda function that acts as a proxy for all routes.
      Environment:
        Variables:
          MONGODB_URI: !Ref MongoDbUri
          DB_NAME: !Ref DbName
          JWT_SECRET: !Ref JwtSecret
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        ApiProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId:
              Ref: PassengerApi

  PassengerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

Outputs:
  PassengerProxyFunctionArn:
    Description: "Passenger Proxy Function ARN"
    Value: !GetAtt PassengerProxyFunction.Arn

  ApiUrl:
    Description: "URL for endpoint"
    Value: !Sub "https://${PassengerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
